


/* КУРСОВАЯ РАБОТА ПО ДИСЦИПЛИНЕ "БАЗЫ ДАННЫХ" */
/* ЗАДАНИЕ 2. СОЗДАТЬ SQL ЗАПРОСЫ К БАЗЕ ДАННЫХ "РАСПИСАНИЕ ЗАНЯТИЙ" */
/* ВАРИАНТ №11 */


drop 	database w2v11;
create 	database w2v11;
use 	w2v11;

/*___________________________________________________*/
/*                    Задание 1                      */
/*___________________________________________________*/


/*____________________Таблица 1______________________*/

create table `Дисциплины`
(
`Код дисциплины` 		int 	(3) 	not null primary key,
`Название дисциплины` 	varchar (30) 	not null,
`Лекции` 				int 	(2) 	not null,
`Семинары` 				int 	(3) 	not null,
`Итоговый контроль` 	varchar (15) 	not null
);  

/*____________________Таблица 2______________________*/

create table `Преподаватели`
(
`Табельный номер` 		int 	(4) 	not null primary key,
`ФИО` 					varchar (35) 	not null,
`Должность` 			varchar (20) 	not null
);

/*____________________Таблица 3______________________*/

create table `Расписание занятий` 
(
`Номер группы` 			varchar (6) 	not null,
`Дата` 					date not null,
`N пары` 				int 	(2) 	not null,
`Табельный номер` 		int 	(4) 	not null,
`Код дисциплины` 		int 	(3) 	not null,

foreign key 	(`Табельный номер`)
references 		`Преподаватели` (`Табельный номер`)
on update cascade on delete restrict,

foreign key 	(`Код дисциплины`)
references 		`Дисциплины` (`Код дисциплины`) 
on update cascade on delete restrict 
);

/*____________________Таблица 4______________________*/

create table `Расписание занятий 1` 
(
`Номер группы` 			varchar (6) 	not null,
`Дата` 					date not null,
`N пары` 				int 	(2) 	not null,
`Табельный номер` 		int 	(4) 	not null,
`Код дисциплины` 		int 	(3) 	not null,

foreign key 	(`Табельный номер`)
references 		`Преподаватели` (`Табельный номер`)
on update cascade on delete restrict,

foreign key 	(`Код дисциплины`)
references 		`Дисциплины` (`Код дисциплины`) 
on update cascade on delete restrict 
);

/*___________________________________________________*/
/*                    Задание 3                      */
/*___________________________________________________*/



insert into `Дисциплины` values
(101,	'Математика',		      68,	68,		'Зачёт'			 ),
(102,	'Математика',			  68,	102,	'Экзамен'		 ),
(121,	'Информатика',			  34,	102,	'Экзамен'		 ),
(221,	'Иностранный язык',	  	  0,	144,	'Зачёт'			 ),
(222,	'Иностранный язык',	  	  0,	144,	'Зачёт с оценкой'),
(322,	'Экономика предприятия',  68,	34,		'Зачёт'			 );


insert into `Преподаватели` values
(1001,	'Иванов Сергей Степанович',	'доцент'			),
(1002,	'Степанов Василий Ильич',	'профессор'			),
(1003,	'Петрова Ирина Олеговна',	'ст. преподаватель'	);


insert into `Расписание занятий` values
('ГМУ-11',	'2018.11.23',	1,	1003,	221	),
('ГМУ-11',	'2018.11.23',	2,	1001,	101	);


insert into `Расписание занятий 1` values
('ИВТ-24',	'2018.11.24',	1,	1001,	121	),
('ИВТ-24',	'2018.11.23',	3,	1001,	102	),
('ГМУ-21',	'2018.11.24',	2,	1002,	322	),
('ГМУ-21',	'2018.11.24',	3,	1003,	222	);



/*___________________________________________________*/
/*                    Задание 4                      */
/*___________________________________________________*/

insert into 	`Расписание занятий` 
select * from 	`Расписание занятий 1`;
select * from 	`Расписание занятий`;



/*___________________________________________________*/
/*                    Задание 5                      */
/*___________________________________________________*/
 
update 			`Расписание занятий`
set				`Дата` = `Дата` + interval 1 year;
select * from 	`Расписание занятий`;


/*___________________________________________________*/
/*                    Задание 6                      */
/*___________________________________________________*/
 
select * from 	`Дисциплины`;
select * from 	`Расписание занятий`;
select * from 	`Расписание занятий 1`;

delete from 	`Расписание занятий 1` where `Код дисциплины` = 102;
delete from 	`Расписание занятий` where `Код дисциплины` = 102;
delete from 	`Дисциплины` where `Код дисциплины` = 102;

select * from 	`Дисциплины`;
select * from 	`Расписание занятий`;
select * from 	`Расписание занятий 1`;



/*___________________________________________________*/
/*                    Задание 7                      */
/*___________________________________________________*/
 
select * from 			`Расписание занятий 1`;
drop table if exists 	`Расписание занятий 1`;
select * from 			`Расписание занятий 1`;



/*___________________________________________________*/
/*                    Задание 8                      */
/*___________________________________________________*/
 
select  

		`Дисциплины`.`Код дисциплины`,
		`Дисциплины`.`Название дисциплины`,
		`Дисциплины`.`Лекции`,
		`Дисциплины`.`Семинары`
		
from 
		`Дисциплины`
		
where 	
		`Лекции` 
		
between 30 and 50 

or 		
		`Семинары`
		
between 30 and 50;

/*___________________________________________________*/
/*                    Задание 9                      */
/*___________________________________________________*/
 
set @index='ИВТ-24';

select 	

		`Номер группы`,
		`Дата`,
		`N пары`, 
		`Название дисциплины`, 
		`ФИО`, 
		`Должность`
		
from
		`Дисциплины`
		
inner join
		
		`Расписание занятий`
on 
		`Расписание занятий`.`Код дисциплины` = `Дисциплины`.`Код дисциплины`

inner join
		
		`Преподаватели`
on
		`Преподаватели`.`Табельный номер`=`Расписание занятий`.`Табельный номер`
where
		
		`Номер группы`=@index;


/*___________________________________________________*/
/*                    Задание 10                     */
/*___________________________________________________*/


select 	

		`Табельный номер`,
		`ФИО`,
		`Должность`
		
from 	

		`Преподаватели`

where not exists
		
(select	* from 	 `Расписание занятий`

 where			 `Расписание занятий`.`Табельный номер` = `Преподаватели`.`Табельный номер`);



/*___________________________________________________*/
/*                    Задание 11                     */
/*___________________________________________________*/
 

 
select 
		`Расписание занятий`.`Табельный номер`,
		`Преподаватели`.`ФИО`,
		`Преподаватели`.`Должность`,
		
count(*) as `Количество групп`

from 
		`Преподаватели`

inner join 

		`Расписание занятий`
on 

		`Расписание занятий`.`Табельный номер`= `Преподаватели`.`Табельный номер`
		
group by 1, 3

having count(*) >= 2;

		
/*___________________________________________________*/
/*                    Задание 12                     */
/*___________________________________________________*/
 
 
 
select 	avg(`Лекции`) as `Лекции`,

		avg(`Семинары`) as `Семинары`
		
from   	`Дисциплины`;
 
 
/*___________________________________________________*/
/*                    Задание 13                     */
/*___________________________________________________*/
 
 
 
 select 
		`Дисциплины`.`Код дисциплины`,
		`Дисциплины`.`Название дисциплины`,
		
count(distinct `Расписание занятий`.`Номер группы`) as `Количество`
		
 from
	
		`Дисциплины`
		
inner join

		`Расписание занятий`
		
on 

		`Расписание занятий`.`Код дисциплины`=`Дисциплины`.`Код дисциплины`
 
 group by 
 
		`Дисциплины`.`Код дисциплины`;
		
 
/*___________________________________________________*/
/*                    Задание 14                     */
/*___________________________________________________*/
 
 
 
 create view `Всего часов`
 
 as
 
 select `Преподаватели`.`Табельный номер`,
		`ФИО`,
		`Должность`,
		
sum(`Лекции`+`Семинары`) as `Максимальная нагрузка`

from 
	
		`Расписание занятий`
		
inner join

		`Преподаватели`
		
on 

		`Преподаватели`.`Табельный номер` = `Расписание занятий`.`Табельный номер`
 
 inner join
 
		`Дисциплины`
		
on 

		`Дисциплины`.`Код дисциплины`=`Расписание занятий`.`Код дисциплины`
		
group by

		`Расписание занятий`.`Табельный номер`;
		
select * from 

		`Всего часов`
		
where

		`Максимальная нагрузка` = (select max(`Максимальная нагрузка`) from `всего часов`);

 